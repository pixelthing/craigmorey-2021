{
  "version": "https://jsonfeed.org/version/1",
  "title": "pixelthing",
  "home_page_url": "https://example.com/",
  "feed_url": "https://example.com/feed/feed.json",
  "description": "I am writing about my experiences as a naval navel-gazer.",
  "author": {
    "name": "Craig Morey",
    "url": "https://example.com/about-me/"
  },
  "items": [{
      "id": "https://example.com/posts/2020-12-webdev-with-an-ipad/",
      "url": "https://example.com/posts/2020-12-webdev-with-an-ipad/",
      "title": "Web dev with an iPad in 2020",
      "content_html": "<p>At this time of the year I normally go deep on what’s changed if you’re a front-end web developer with an iPad. This year, I’m not going to do that, largely because I don’t have a set-up that’s representative of a 2020 iPad Pro (I have a 10.5”), but also because this year of all years, I think I’m justified in taking time off over the christmas holiday and not spending it explaining every possible workflow.</p>\n<p>But 2020 - despite feeling like a flat curve of time - has been surprisingly busy in the iPad world. Here are some highlights that effect you as a developer with an iPad in the hand.</p>\n<h3 id=\"ios13.4-%26-magic-keyboard\">iOS13.4 &amp; Magic keyboard <a class=\"direct-link\" href=\"#ios13.4-%26-magic-keyboard\">#</a></h3>\n<p>I know that iOS14.4 is already appearing as a Public beta, but it was only back in March that the previous point4 upgrade dropped with the largest change for Pro iPads since the pencil. We received pointer support and (eventually) the Magic keyboard, which further blurred the lines between MacBook and iPad, both in functionality, and - for some - less favourably in portability.</p>\n<blockquote>\n<p>Text workers such as us developers could stop smudging our fingers at a screen, hoping for accurate text selection</p>\n</blockquote>\n<p>Instead, we could finally position a cursor accurately. Plus the magic keyboard was a quantum leap over the previous fabric design (if you don’t mind the reduction in crumb and liquid protection), and came with a killer trackpad built in, on top of a unique design.</p>\n<p>The innovative cursor morphing felt very iOS, but it had split reviews. Apps supported the new pointer in slightly esoteric ways - not surprising considering the many ways text selection has worked in only a short period of time on this platform. But I don’t doubt that this is the single biggest - and most unexpected - Pro iPad upgrade this year.</p>\n<h3 id=\"m1-macs\">M1 Macs <a class=\"direct-link\" href=\"#m1-macs\">#</a></h3>\n<p>The M1 is a watershed for Macintosh. But it’s also probably a turning point for iPads. Will the next iPad Pro have an under-clocked M1 8GB under an “A14X” moniker? If future Macs get a touch screen - seeing as they already run iOS apps - do MacBooks get to be an iPad Pro Pro? Will having M1 compiled pro apps on MacOS increase the amount that make the jump to iOS?</p>\n<p><strong>But the big point this makes is that MacOS isn’t going anywhere</strong>, and the Mac’s positioning as “the truck” (in Steve Jobs parlance) compared to iOS’ “car” is not changing. M1 Macs finally made it clear that Apple is never going to ride to the rescue and suddenly make the iPad an open, developer-friendly platform - they already have a roadmapped platform for that. So this is it, some small incremental improvements in the environment and ow volume third party apps are what you’re getting. iPadOS is finally becoming a neat secondary dev platform, but forget the idea that it could ever be anything more.</p>\n<p>However, could there be a meeting point in five years where the two OS’ merge (in some sense), even if the hardware stays on two tracks? Well, the M1 definitely makes this more - not less - possible.</p>\n<h3 id=\"ipad-air-4th-gen\">iPad Air 4th gen <a class=\"direct-link\" href=\"#ipad-air-4th-gen\">#</a></h3>\n<p>All agreed that the iPad Pro 2020 was a very mild tweak of the two year old 2018 Pro. So the big upgrade in 2020 was the iPad Air. If you can live without the 120Hz screen and FaceID, it’s basically the 2020 Pro, but 40% quicker in single core and only 10% slower in multi-core. And you could throw in another basic iPad on top before you get to the price of current Pro.</p>\n<p>If you can find an original 2018 Pro for a good price - and there’s still a lot out there - it’s a much closer run thing. But it’s a good sign that the Pro experience is continuing to move down the range, and that the 2021 Pro has got to raise the bar again to justify its price.</p>\n<h3 id=\"code\">Code <a class=\"direct-link\" href=\"#code\">#</a></h3>\n<p>This is the app surprise of the year for me. It started as a simple enough little playground project - lets take the interface of VSCode and see if it can be reproduced in SwiftUI. But with continual updates, it has progressed in nine months to the point that it’s pretty damned close in core functionality to it’s role model. It has intellisense style hints &amp; suggestions, a command palette, and code running options including node.js and python. There are still some problems that need attention, but this could be the star of next year’s IDE crowd at this rate - it’s certainly got my attention.</p>\n<h3 id=\"playjs-2.0\">PlayJS 2.0 <a class=\"direct-link\" href=\"#playjs-2.0\">#</a></h3>\n<p>Play.js 1.0 was innovative and quirky, but more importantly was the only way you could build a node.js or React project on iOS. This year, a complete rewrite resulted in v2.0, ironing out a lot of the quirks and adding a whole lot of functionality. Between enabling vue.js and next.js projects, to having the best devtools outside of inspect browser, Play.js has grown beyond expectations in 2020. Every aspect has improved, but the biggest thing you notice is that it fits together better, and looks and feels like a top tier iOS app. I even like that it has in-app optional tip payment - if you buy and use these apps over years, there’s no better way to say thanks for the updates.</p>\n<h3 id=\"the-apple-store-small-business-program\">The Apple store small business program <a class=\"direct-link\" href=\"#the-apple-store-small-business-program\">#</a></h3>\n<p>Almost all the apps mentioned in this article are from one-person or small-team developers. A large amount of these teams only build apps as a side-job, because the volumes just don’t make full-time app development financially viable. With the advent of the small business program (which reduces Apple’s cut from 30% to 15%), the developers effectively get a 20% pay rise. That might not make them rich, but it might mean it’s worthwhile to carry on maintaining these apps, or even devote more time to them - and surprise us all with the results.</p>\n<h2 id=\"honourable-mentions\">Honourable mentions <a class=\"direct-link\" href=\"#honourable-mentions\">#</a></h2>\n<h3 id=\"working-copy\">Working Copy <a class=\"direct-link\" href=\"#working-copy\">#</a></h3>\n<p>Still the hub of any source control project on iOS, this year the git client/IDE gained loads of functionality including stashing, large file support, direct file editing in Textastic, and a reliable way of running background servers (yay).</p>\n<h3 id=\"shellfish\">Shellfish <a class=\"direct-link\" href=\"#shellfish\">#</a></h3>\n<p>The other essential app from Andreas, author of Working Copy, Shellfish pivoted in 2020 from being “just” an invaluable file provider for ssh and sftp connections into also being one of the most extraordinary ssh clients on any platform. Drag-n-drop files from a shell? Shellfish can do that.</p>\n<h3 id=\"textastic\">Textastic <a class=\"direct-link\" href=\"#textastic\">#</a></h3>\n<p>Textastic remains the best all round IDE on iPadOS, it’s mature, well integrated and has just enough functionality to deal with most types of work, without having too much to get in the way. This year it can now work in multiple windows and became even closer integrated with Working Copy.</p>\n<h3 id=\"serveeditor\">Serveeditor <a class=\"direct-link\" href=\"#serveeditor\">#</a></h3>\n<p>Last year I got deep into installing VSCode onto a remote server to use it as an IDE on iPad, and since then someone has made it exactly this process into a Native (well, ish) app, including a subscription to the server so you don’t need to do a thing. And it works pretty well. Not all of the problems with using a remote application in a local setting are fixed - or could be - but at it’s core it really is actual VSCode running on an iPad, and that’s impressive.</p>\n<h3 id=\"inspect-browser\">Inspect browser <a class=\"direct-link\" href=\"#inspect-browser\">#</a></h3>\n<p>Still the best option for web devtools on iOS, and still coming out with additional functionality and interface updates. Building an entire browser just so that you can add devtools to it is an insane amount of work that you undertake only if you didn’t realise how much work was involved when you started - support them as much as you can so that they continue on this crazy quest that is so essential to any web dev on iPadOS.</p>\n<h2 id=\"what-we-still-need\">What we still need <a class=\"direct-link\" href=\"#what-we-still-need\">#</a></h2>\n<p>It seems almost unbelievable to me that only a couple of years ago, I was clutching for the basic apps to do some part of my job on an iPad. Now almost all of those holes have been filled.</p>\n<p>It’s at a point where the solving of the major blockages just throws iPadOS’ fundamental workflow quirks into sharp relief. And the main one is the the same one I had three years ago;</p>\n<p><strong><em>iOS is ruthless at killing background processes.</em></strong></p>\n<p>iOS works quite differently from MacOS - it was built for limited CPU, limited memory and minimal battery drain. As such, iOS is built around being super efficient at saving an app state to storage when you leave it for more than a few minutes, then re-hydrating it when you return - so quickly that you barely notice it. This works great for your native photo editing app, but it’s not so good for many electron or webview-based apps, and just impossible for running dev servers unless you keep them in the foreground continually.</p>\n<blockquote>\n<p>We need to have an API that allows at least some part of them to run in the background.</p>\n</blockquote>\n<p>If we want to run dev servers or node toolchains in apps like Play.js or Working Copy on an iPad, we need to have an API that allows at least some part of them to run in the background. Hacks like pinging for location to prevent the app being killed must be replaced with a better solution. Music apps like Spotify have had an exception to allow background processing for years, and we need it now.</p>\n<p>The other solution is the least talked about iPad Pro update of 2020 - 6GB of RAM. Even with the 4GB on my 10.5”, flicking between heavy web apps has tabs reloading because they were purged from memory after only minutes (thereby losing scroll position, page state, text caret position and even login tokens). More memory has always been the big difference between consumer and Pro computers - iPads are no exception - I’d love to see 8GB in the 2021 Pro.</p>\n<hr>\n<p>Of course we could still do with a real command line. A sandboxed environment - possibly virtualised now that iPadOS allows that (and the M1 even has accelerators for it). Come on Apple, ISH and aShell show the way - let me run straight nodeJS on your Pro devices.</p>\n<p>Just to put the cherry on the top, Docker, Homebrew and countless other packages are being compiled at this moment for the M1 - which is essentially an iOS A14 chip with some extras. If Apple just provided the iOS sandbox for them to play in...</p>\n<hr>\n<p>Devtools are absolutely essential to the web development process and it’s still not possible in Safari on iPad unless you connect up to a Mac. Apple don’t look like they’re going to suddenly include devtools in Safari on iPadOS - so we have either the do it ourself option with apps such as Inspect Browser, or the hope that Apple will eventually allow other browser engines onto the platform, so that big vendors such as Google or Firefox have the opportunity to fill the gap. Even that is a hope on top of a hope (Chrome doesn’t even support devtools on Android, even if it does on ChromeOS), but I still feel that Apple will have their hand forced by regulators to open up to other browsers at some point.</p>\n<hr>\n<p>The 12.9” iPad with Magic keyboard is the same weight as a MacBook Pro. The 11” is much more portable but screen space is really tight to work off for any period. What I want is to have real monitor spanning in iOS, not the half strength support we currently have. With pointer support in iOS, we don’t need touch monitors, in fact any USB3 screen would do. We know the GPU can do it. We just need the support in iOS.</p>\n<p>A super compact, powerful computer on the go, and a large screen experience at the desktop.</p>\n<hr>\n<p>Have a good 2021...</p>\n",
      "date_published": "2020-12-29T23:00:00+01:00"
    },{
      "id": "https://example.com/posts/2020-08-getting-critical-data-noticed/",
      "url": "https://example.com/posts/2020-08-getting-critical-data-noticed/",
      "title": "Getting critical data noticed",
      "content_html": "<figure class=\"fig-hero\">\n  <picture>\n    <img src=\"../../img/2020-08-hero1.jpeg\" width=\"5999\" height=\"2048\" />\n  </picture>\n</figure>\n<h3 id=\"with-remote-working%2C-data-needs-to-exist-where-its-audience-lives.\">With remote-working, data needs to exist where its audience lives. <a class=\"direct-link\" href=\"#with-remote-working%2C-data-needs-to-exist-where-its-audience-lives.\">#</a></h3>\n<p>It feels like we’ve crossed a threshold. Businesses (and the general public) are increasingly calling for more data, and for it to be presented in a smart and pedagogic way.</p>\n<p>But we are living in a seriously distracted time. Knowing we need to be looking at data is very different from having the trigger to actually do it. Too often, the idea that we need to check on the progress of a chart is so far down the list of shiny new things to look at that it remains a noble effort, like signing up for the gym but never finding the time to go.</p>\n<p>How do we wedge business critical data into this distraction disaster zone, especially when the real insight from the data often can’t be explained in a 140 character chunk?</p>\n<p><em>I thought this was a solved problem</em>. A well designed physical dashboard (eg a large wall display) in full view of the team could provide intuitive visuals to let people spot a “what”, and then understand the “why” in the data.</p>\n<p>And then came COVID, and suddenly the people who would see these dashboards were no longer sitting in the same room.</p>\n<p>We already know that just sending a URL out to people is not enough — it won’t be looked at — at least enough to be worthwhile, so how do we solve this?</p>\n<hr>\n<p>When you (eventually) go back to the cinema to watch a two hour epic, you will probably decide to go whilst watching a two minute trailer. And you probably only watched that trailer because you saw a poster or a twenty second advert. The cinema trip wouldn’t happen without the trailer or poster, and you might see twenty different posters a day, but the one that attracts you won’t satisfy your appetite for the film on its own.</p>\n<p>This is the flow that we’ve got to get ourselves into, a sort of a system 1 (“intuitive”) thinking pattern to lead into system 2 (cognitive thought) when it’s required.</p>\n<p>Let’s call these two ends of the chain “<strong>the bite</strong>”, and “<strong>the body</strong>”.</p>\n<p>“<strong>The body</strong>” is a variant on the dashboard we build already, it should be giving multiple indicators and insights to form an opinion or decision. But it differs in two ways to what we would usually build. Firstly it <em>can</em> be found at the end of a URL/link, because “the bite” does the work of attracting interest to it. Secondly, because it doesn’t need to do double-duty of attracting attention <em>and</em> serving up depth, it can be re-configured assuming the viewer already has a view on the data when they start looking into it. In an ideal world, you could have variants of dashboard for different analysis, depending on the link in message of “the bite”.</p>\n<p>Image for post<br>\nchartyios.app in an iOS14 widget</p>\n<p>“<strong>The bite</strong>” is more interesting, because there are so many options available to us. Let’s talk about the medium before we get into the message.</p>\n<p>Push notifications (SMS, email, adhoc Slack messages) have baggage. They have a very important place in alerting people to conditions that need immediate attention, but if you use them as a way to simply update people, they quickly become ignored. Preference and psychology play a part here — I tried automating daily SMS updates and it fell flat, but sending a daily screenshot of a simple dashboard into a Slack channel provided a team with some really good context for their daily conversations.</p>\n<p>However, my current favourite option is with smartphone home screen widgets. Living in an iOS centric country, I missed out on creating these in Android, but now I’m fully onboard with the upcoming iOS14 update, testing it with some third-party software that will launch alongside the OS (Scriptable, Charty, WidgetPack) to present simple data on a user’s home screen amongst their regular icons.</p>\n<blockquote>\n<p>the audience already chooses to look at this screen an average of 58 times a day...</p>\n</blockquote>\n<p>This approach has multiple advantages. The first is this the audience already <em>chooses</em> to look at this screen an average of 58 times a day. Who needs a daily push update, when the viewer is already looking at these pixels several times an hour. And that means viewers start to see realtime patterns (for instance daily routines in global markets), leading to deeper insights and helping to spot breaks in the expected results.</p>\n<p>Our problem will eventually be more competition with distraction — when your viewers have shiny home screen widgets for other data (screen time, health data, etc), will your data widget be pushed onto the third screen that never gets viewed?</p>\n<p>If that’s the medium, what about the message? First we need to get attention, and this is where the format of a widget is more useful than a notification, because the background colour can show at a glance it’s worth noticing or ignoring. This is more crucial than any KPI displayed, because viewers need to be given permission to ignore data, so that when it’s important they are more disposed to notice it.</p>\n<p>In the foreground, we’ve found that a single KPI with some sort of comparison context is most useful. For example, “sales today so far” vs “sales at this time yesterday”. That seems to give users enough context to decide if the widget background colour represents a significant change, worthy of investigation. Going further by clicking from the widget to a dashboard is often not necessary, positive outcomes are often taken at face value, whereas unusually negative results tend to make viewers want to know “why”.</p>\n<p>In tests, widgets also turned out to be the best goal tracker we had, viewers can check them quickly, as much as they want, wherever they are, to see if their preferred KPI has hit target (useful in competitive sales environments). This also means the more complex dashboards (“the body”) are under much less load.</p>\n<p>Very soon you will see lots of screenshots of these widgets in social media as a shorthand to a humblebrag.</p>\n<figure class=\"fig-column\">\n  <picture>\n    <img src=\"../../img/2020-08-scriptable1.jpeg\" />\n  </picture>\n  <figcaption>\n    JS script running in a scriptable.app iOS14 widget\n  </figcaption>\n</figure>\n<hr>\n<p>Just like the cinema example earlier, you could have more constituent parts than just two — you might have “the bite” leading to an in-app overview that helps you decide if it’s just an anomaly, or needs further investigation in a third dashboard. Just so long as the user gets the right messages <em>promptly</em> that leads to the right outcome.</p>\n<p>What we’re trying to do is to bring data to the screens the audience is <em>already looking at</em> — instead of forcing the audience to <em>journey</em> to the data. By doing this, we could start to not only deliver on the idea of “more data”, but to deliver a non-intrusive way of actually getting it noticed.</p>\n<p>The results of data getting regular attention will lead to it being much, much more useful.</p>\n",
      "date_published": "2020-08-19T22:00:00+02:00"
    },{
      "id": "https://example.com/posts/2020-05-ipados14-wish-list-for-web-devs/",
      "url": "https://example.com/posts/2020-05-ipados14-wish-list-for-web-devs/",
      "title": "iPadOS14 wish list for web devs",
      "content_html": "<p>Historically, I’ve had a rotten track record for predicting future features. And everyone has their take for iPadOS14 — many focusing on the UI or fabled iPad Pro apps like Xcode or Logic Pro. As a web/data developer with iPads in the hands of various family members, I guess I have a slightly different list of wishes:</p>\n<h2 id=\"what-would-make-ipados-a-good-web-dev-platform\">What would make iPadOS a good web dev platform <a class=\"direct-link\" href=\"#what-would-make-ipados-a-good-web-dev-platform\">#</a></h2>\n<ul>\n<li>Real multi-monitor support. With pointer now implemented in iPadOS, all the pieces are in place. We don’t need desktop spanning, just the ability to adjust where the cursor leaves one screen and appears on another, so we can drop apps across a wider canvas of screens. A 11&quot; in my bag and a 27&quot; on the desktop — but without the compromises that currently means.</li>\n<li>More classes of app that are allowed to run in the background. This is so very important for web dev — we desperately need web servers and compilers to run reliably in the background without requiring hacks like building location awareness into apps to fool the OS into allowing it.</li>\n<li>A first party sand-boxed (virtualised?) command line. Actually, it’s not as impossible as it sounds, ISH does this already, but wow, Node/NPM compatibility would be nice.</li>\n<li>Other web browser engines to be blessed for use in iOS (Chromium/Firefox), or alternatively Safari web inspector to make the jump to iPadOS. Top level devtools are desperately needed on iOS.</li>\n<li>An onscreen keyboard that was tailored to coding would be amazing. Tempted to create one myself.</li>\n<li>Microsoft to walk on stage at the keynote and announce VSCode for iPad (or Panic to announce Nova for iPad — either would do!)</li>\n<li>Slack to similarly come on stage and announce video conferencing and screen sharing is coming to iOS.</li>\n</ul>\n<h2 id=\"and-also%E2%80%A6\">And also… <a class=\"direct-link\" href=\"#and-also%E2%80%A6\">#</a></h2>\n<ul>\n<li>Shipping with multi window &amp; gestures off by default. 80% of the audience don’t care &amp; don’t like it, but want the old, simple iPad experience. The remaining 20% of us want so much more from iPadOS. We can find the settings to turn on those super powers.</li>\n<li>Data back-up options (even if it’s limited to just time machine).</li>\n<li>Of course, tweaks for more coherent multi-tasking. There have been some amazing demos recently online tying to pull the concepts together and make them discoverable, and I’d take any of them.</li>\n<li>Multi user — a stretch I know and it would mean a very long beta. But really, not many in reality can afford a device per child.</li>\n<li>Recognising hardware keyboards and allowing different settings for them, or shortcuts access to swapping keyboard layouts (non-english typists would appreciate this).</li>\n<li>Having some control over audio — like being able choose the mic at OS level. Handy for these WFH times, and also podcasting.</li>\n</ul>\n",
      "date_published": "2020-05-23T22:00:00+02:00"
    },{
      "id": "https://example.com/posts/thirdpost/",
      "url": "https://example.com/posts/thirdpost/",
      "title": "This is my third post.",
      "content_html": "<p>Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view of disruptive innovation via workplace diversity and empowerment.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"highlight-line\"><span class=\"token comment\">// this is a command</span></span><br><span class=\"highlight-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">myCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><ins class=\"highlight-line highlight-line-add\">\t<span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></ins><br><span class=\"highlight-line\"></span><br><del class=\"highlight-line highlight-line-remove\">\tcounter<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// test</span></del><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\"><span class=\"token punctuation\">}</span></span><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\"><span class=\"token comment\">// Test with a line break above this line.</span></span><br><span class=\"highlight-line\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre>\n<p>Bring to the table win-win survival strategies to ensure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.</p>\n<h2 id=\"section-header\">Section Header <a class=\"direct-link\" href=\"#section-header\">#</a></h2>\n<p>Capitalize on low hanging fruit to identify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps. Nanotechnology immersion along the information highway will close the loop on focusing solely on the bottom line.</p>\n",
      "date_published": "2018-08-23T22:00:00+02:00"
    },{
      "id": "https://example.com/posts/secondpost/",
      "url": "https://example.com/posts/secondpost/",
      "title": "This is my second post.",
      "content_html": "<p>Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view of disruptive innovation via workplace diversity and empowerment.</p>\n<h2 id=\"section-header\">Section Header <a class=\"direct-link\" href=\"#section-header\">#</a></h2>\n<p><a href=\"/posts/firstpost/\">First post</a><br>\n<a href=\"/posts/thirdpost/\">Third post</a></p>\n<p>Bring to the table win-win survival strategies to ensure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.</p>\n<p>Capitalize on low hanging fruit to identify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps. Nanotechnology immersion along the information highway will close the loop on focusing solely on the bottom line.</p>\n",
      "date_published": "2018-07-03T22:00:00+02:00"
    },{
      "id": "https://example.com/posts/firstpost/",
      "url": "https://example.com/posts/firstpost/",
      "title": "This is my first post.",
      "content_html": "<p>Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view of disruptive innovation via workplace diversity and empowerment.</p>\n<p>Bring to the table win-win survival strategies to ensure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.</p>\n<h2 id=\"section-header\">Section Header <a class=\"direct-link\" href=\"#section-header\">#</a></h2>\n<p>Capitalize on low hanging fruit to identify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps. Nanotechnology immersion along the information highway will close the loop on focusing solely on the bottom line.</p>\n<pre class=\"language-text\"><code class=\"language-text\"><span class=\"highlight-line\">// this is a command</span><br><span class=\"highlight-line\">function myCommand() {</span><br><mark class=\"highlight-line highlight-line-active\">\tlet counter = 0;</mark><br><mark class=\"highlight-line highlight-line-active\">\tcounter++;</mark><br><span class=\"highlight-line\">}</span><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\">// Test with a line break above this line.</span><br><span class=\"highlight-line\">console.log('Test');</span></code></pre>\n",
      "date_published": "2018-04-30T22:00:00+02:00"
    }
  ]
}
